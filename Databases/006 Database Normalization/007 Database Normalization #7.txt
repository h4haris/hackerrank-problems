Let us take the example of a simple movie library. Each movie has a description, director, and serial number. Customers have a name, address, and membership number. Assume only one copy of each movie exists in the library. We are given the following relations and determinants:

Relations:
movie(DESCRIPTION,serialno)
serial(SERIALNO,director)
customer(name,addr,MEMBERNO)
borrow(memberno,DATE,SERIALNO)

Determinants:
description->director,serialno
serialno->description
serialno->director
name,addr -> memberno
memberno -> name,addr
serialno,date -> memberno

The above relation is in x**NF form where x may take the following values {1,2,3,3.5} corresponding to {1NF, 2NF, 3NF and BCNF} respectively.

What is the maximum possible value of **x such that the above relation satisfies the *x*NF form?

Your answer should only be restricted to one of these numbers:1/2/3/3.5

Ans: 3.5

Explanation: 

1NF is "atomic" (no duplicate columns or multiple values, like customer 1, customer 2, etc.). - check

2NF is "dependency" (all non-key columns are dependant on primary key, which can be verified via determinant list). - check

3NF is "non-transitive" (no columns are related to another column via an intermediary, A->B + B->C = A->C, which can also be verified via determinant list).

BCNF is "if and only if for every one of its dependencies X → Y, at least one of the following conditions hold: X → Y is a trivial functional dependency (Y ⊆ X) or X is a superkey for schema R".

The table that people have objections to being in BCNF is the customer one. For this table, we have the following dependencies:

1) memberno -> name,addr 2) name,addr -> memberno

1) Even though name and address are dependent on memberno, this is what is known as a TRIVIAL FUNCTIONAL DEPENDENCY. ID#'s are the most-common example of this. Basically, think of it as a "functional" alias. Therefore, it doesn't violate this condition.

2) Even though someone can have multiple addresses (and therefore multiple entries), the combination of name + addr will ALWAYS give you just one entry (even if there are multiple entries for the same person). Therefore, name + addr is a superkey.

So BCNF is a check.